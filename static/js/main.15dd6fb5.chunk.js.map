{"version":3,"sources":["Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","props","state","hex1","hex2","result","handleChange","bind","handleSubmit","event","target","value","name","this","setState","lch1","chroma","lch","lch2","map","num","i","preventDefault","onSubmit","type","onChange","className","classname","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRA2EeA,E,kDAvEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,YACNC,KAAM,aACNC,OAAQ,KAGV,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATH,E,gDAYnB,SAAaE,GACX,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpBC,KAAKC,SAAL,eACGF,EAAOD,M,0BAIZ,SAAaF,GAEX,IAAIM,EAAOC,IAAOH,KAAKX,MAAMC,MAAMc,MAC/BC,EAAOF,IAAOH,KAAKX,MAAME,MAAMa,MAG/BZ,EAASU,EAAKI,KAAI,SAAUC,EAAKC,GACnC,OAAOD,EAAMF,EAAKG,MAKpBR,KAAKC,SAAS,CACZT,OAAQA,IAGVI,EAAMa,mB,oBAGR,WACE,OACE,gCACE,uBAAMC,SAAUV,KAAKL,aAArB,UACE,iDAEE,uBACEgB,KAAK,OACLZ,KAAK,OACLD,MAAOE,KAAKX,MAAMC,KAClBsB,SAAUZ,KAAKP,kBAGnB,mDAEE,uBACEkB,KAAK,OACLZ,KAAK,OACLD,MAAOE,KAAKX,MAAME,KAClBqB,SAAUZ,KAAKP,kBAGnB,uBAAOoB,UAAU,SAASF,KAAK,SAASb,MAAM,cAEhD,mBAAGgB,UAAU,SAAb,SAAuBd,KAAKX,MAAMG,gB,GAlEjBuB,IAAMC,WCWhBC,MAXf,WACE,OACE,qBAAKJ,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,uEACA,cAAC,EAAD,UCIOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.15dd6fb5.chunk.js","sourcesContent":["import React from \"react\";\nimport chroma from \"chroma-js\";\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hex1: \"First HEX\",\n      hex2: \"Second HEX\",\n      result: \"?\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    // transform hex's to lch's\n    let lch1 = chroma(this.state.hex1).lch();\n    let lch2 = chroma(this.state.hex2).lch();\n\n    // get differences\n    let result = lch1.map(function (num, i) {\n      return num - lch2[i];\n    });\n\n    // lch(from hex1 -20.095281554789977, -72.33231061331429, 0.19841406746820667)\n\n    this.setState({\n      result: result,\n    });\n\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Primary HEX:\n            <input\n              type=\"text\"\n              name=\"hex1\"\n              value={this.state.hex1}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            Secondary HEX:\n            <input\n              type=\"text\"\n              name=\"hex2\"\n              value={this.state.hex2}\n              onChange={this.handleChange}\n            />\n          </label>\n          <input className=\"Button\" type=\"submit\" value=\"Submit\" />\n        </form>\n        <p classname=\"Result\">{this.state.result}</p>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import \"./App.css\";\nimport Calculator from './Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>lch calculator, because color is hard.</p>\n        <Calculator />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}